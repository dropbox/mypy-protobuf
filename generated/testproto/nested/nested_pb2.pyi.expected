"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
    FileDescriptor as google___protobuf___descriptor___FileDescriptor,
)

from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper as google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from testproto.test3_pb2 import (
    OuterEnumValue as testproto___test3_pb2___OuterEnumValue,
)

from typing import (
    NewType as typing___NewType,
    Optional as typing___Optional,
    Text as typing___Text,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


DESCRIPTOR: google___protobuf___descriptor___FileDescriptor = ...

class Nested(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    a: testproto___test3_pb2___OuterEnumValue = ...

    def __init__(self,
        *,
        a : typing___Optional[testproto___test3_pb2___OuterEnumValue] = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"a",b"a"]) -> None: ...
type___Nested = Nested

class AnotherNested(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    NestedEnumValue = typing___NewType('NestedEnumValue', builtins.int)
    type___NestedEnumValue = NestedEnumValue
    NestedEnum: _NestedEnum
    class _NestedEnum(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AnotherNested.NestedEnumValue]):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        INVALID = typing___cast(AnotherNested.NestedEnumValue, 0)
        ONE = typing___cast(AnotherNested.NestedEnumValue, 1)
        TWO = typing___cast(AnotherNested.NestedEnumValue, 2)
    INVALID = typing___cast(AnotherNested.NestedEnumValue, 0)
    ONE = typing___cast(AnotherNested.NestedEnumValue, 1)
    TWO = typing___cast(AnotherNested.NestedEnumValue, 2)

    class NestedMessage(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        NestedEnum2Value = typing___NewType('NestedEnum2Value', builtins.int)
        type___NestedEnum2Value = NestedEnum2Value
        NestedEnum2: _NestedEnum2
        class _NestedEnum2(google___protobuf___internal___enum_type_wrapper____EnumTypeWrapper[AnotherNested.NestedMessage.NestedEnum2Value]):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            UNDEFINED = typing___cast(AnotherNested.NestedMessage.NestedEnum2Value, 0)
            NESTED_ENUM1 = typing___cast(AnotherNested.NestedMessage.NestedEnum2Value, 1)
            NESTED_ENUM2 = typing___cast(AnotherNested.NestedMessage.NestedEnum2Value, 2)
        UNDEFINED = typing___cast(AnotherNested.NestedMessage.NestedEnum2Value, 0)
        NESTED_ENUM1 = typing___cast(AnotherNested.NestedMessage.NestedEnum2Value, 1)
        NESTED_ENUM2 = typing___cast(AnotherNested.NestedMessage.NestedEnum2Value, 2)

        s: typing___Text = ...
        b: builtins.bool = ...
        ne: type___AnotherNested.NestedEnumValue = ...
        ne2: type___AnotherNested.NestedMessage.NestedEnum2Value = ...

        def __init__(self,
            *,
            s : typing___Optional[typing___Text] = ...,
            b : typing___Optional[builtins.bool] = ...,
            ne : typing___Optional[type___AnotherNested.NestedEnumValue] = ...,
            ne2 : typing___Optional[type___AnotherNested.NestedMessage.NestedEnum2Value] = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"b",b"b",u"ne",b"ne",u"ne2",b"ne2",u"s",b"s"]) -> None: ...
    type___NestedMessage = NestedMessage


    def __init__(self,
        ) -> None: ...
type___AnotherNested = AnotherNested

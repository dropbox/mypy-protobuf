# @generated by generate_proto_mypy_stubs.py.  Do not edit!
import sys
from google.protobuf.descriptor import (
    Descriptor as google___protobuf___descriptor___Descriptor,
    EnumDescriptor as google___protobuf___descriptor___EnumDescriptor,
)

from google.protobuf.message import (
    Message as google___protobuf___message___Message,
)

from test.proto.test3_pb2 import (
    OuterEnum as test___proto___test3_pb2___OuterEnum,
)

from typing import (
    List as typing___List,
    Optional as typing___Optional,
    Text as typing___Text,
    Tuple as typing___Tuple,
    Union as typing___Union,
    cast as typing___cast,
)

from typing_extensions import (
    Literal as typing_extensions___Literal,
)


builtin___bool = bool
builtin___bytes = bytes
builtin___float = float
builtin___int = int
builtin___str = str
if sys.version_info < (3,):
    builtin___buffer = buffer
    builtin___unicode = unicode


class Nested(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    a = ... # type: test___proto___test3_pb2___OuterEnum

    def __init__(self,
        *,
        a : typing___Optional[test___proto___test3_pb2___OuterEnum] = None,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> Nested: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> Nested: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def ClearField(self, field_name: typing_extensions___Literal[u"a",b"a"]) -> None: ...
global___Nested = Nested

class AnotherNested(google___protobuf___message___Message):
    DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
    class NestedEnum(builtin___int):
        DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
        @classmethod
        def Name(cls, number: builtin___int) -> builtin___str: ...
        @classmethod
        def Value(cls, name: builtin___str) -> 'AnotherNested.NestedEnum': ...
        @classmethod
        def keys(cls) -> typing___List[builtin___str]: ...
        @classmethod
        def values(cls) -> typing___List['AnotherNested.NestedEnum']: ...
        @classmethod
        def items(cls) -> typing___List[typing___Tuple[builtin___str, 'AnotherNested.NestedEnum']]: ...
        INVALID = typing___cast('AnotherNested.NestedEnum', 0)
        ONE = typing___cast('AnotherNested.NestedEnum', 1)
        TWO = typing___cast('AnotherNested.NestedEnum', 2)
    INVALID = typing___cast('AnotherNested.NestedEnum', 0)
    ONE = typing___cast('AnotherNested.NestedEnum', 1)
    TWO = typing___cast('AnotherNested.NestedEnum', 2)
    global___NestedEnum = NestedEnum

    class NestedMessage(google___protobuf___message___Message):
        DESCRIPTOR: google___protobuf___descriptor___Descriptor = ...
        class NestedEnum2(builtin___int):
            DESCRIPTOR: google___protobuf___descriptor___EnumDescriptor = ...
            @classmethod
            def Name(cls, number: builtin___int) -> builtin___str: ...
            @classmethod
            def Value(cls, name: builtin___str) -> 'AnotherNested.NestedMessage.NestedEnum2': ...
            @classmethod
            def keys(cls) -> typing___List[builtin___str]: ...
            @classmethod
            def values(cls) -> typing___List['AnotherNested.NestedMessage.NestedEnum2']: ...
            @classmethod
            def items(cls) -> typing___List[typing___Tuple[builtin___str, 'AnotherNested.NestedMessage.NestedEnum2']]: ...
            UNDEFINED = typing___cast('AnotherNested.NestedMessage.NestedEnum2', 0)
            NESTED_ENUM1 = typing___cast('AnotherNested.NestedMessage.NestedEnum2', 1)
            NESTED_ENUM2 = typing___cast('AnotherNested.NestedMessage.NestedEnum2', 2)
        UNDEFINED = typing___cast('AnotherNested.NestedMessage.NestedEnum2', 0)
        NESTED_ENUM1 = typing___cast('AnotherNested.NestedMessage.NestedEnum2', 1)
        NESTED_ENUM2 = typing___cast('AnotherNested.NestedMessage.NestedEnum2', 2)
        global___NestedEnum2 = NestedEnum2

        s = ... # type: typing___Text
        b = ... # type: builtin___bool
        ne = ... # type: global___AnotherNested.NestedEnum
        ne2 = ... # type: global___AnotherNested.NestedMessage.NestedEnum2

        def __init__(self,
            *,
            s : typing___Optional[typing___Text] = None,
            b : typing___Optional[builtin___bool] = None,
            ne : typing___Optional[global___AnotherNested.NestedEnum] = None,
            ne2 : typing___Optional[global___AnotherNested.NestedMessage.NestedEnum2] = None,
            ) -> None: ...
        if sys.version_info >= (3,):
            @classmethod
            def FromString(cls, s: builtin___bytes) -> AnotherNested.NestedMessage: ...
        else:
            @classmethod
            def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> AnotherNested.NestedMessage: ...
        def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
        def ClearField(self, field_name: typing_extensions___Literal[u"b",b"b",u"ne",b"ne",u"ne2",b"ne2",u"s",b"s"]) -> None: ...
    global___NestedMessage = NestedMessage


    def __init__(self,
        ) -> None: ...
    if sys.version_info >= (3,):
        @classmethod
        def FromString(cls, s: builtin___bytes) -> AnotherNested: ...
    else:
        @classmethod
        def FromString(cls, s: typing___Union[builtin___bytes, builtin___buffer, builtin___unicode]) -> AnotherNested: ...
    def MergeFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
    def CopyFrom(self, other_msg: google___protobuf___message___Message) -> None: ...
global___AnotherNested = AnotherNested

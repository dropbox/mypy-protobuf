# @generated by generate_proto_mypy_stubs.py.  Do not edit!
from abc import (
    ABCMeta,
    abstractmethod,
)

from concurrent.futures import (
    Future,
)

from google.protobuf.internal.containers import (
    RepeatedScalarFieldContainer,
)

from google.protobuf.message import (
    Message,
)

from typing import (
    Any,
    Callable,
    Iterable,
    List,
    Optional,
    Text,
    Tuple,
    cast,
)

class OuterEnum(int):
    @classmethod
    def Name(cls, number: int) -> str: ...
    @classmethod
    def Value(cls, name: str) -> int: ...
    @classmethod
    def keys(cls) -> List[str]: ...
    @classmethod
    def values(cls) -> List[int]: ...
    @classmethod
    def items(cls) -> List[Tuple[str, int]]: ...
FOO = cast(OuterEnum, 1)
BAR = cast(OuterEnum, 2)

class Simple1(Message):
    a_string = ... # type: Text
    a_repeated_string = ... # type: RepeatedScalarFieldContainer[Text]
    a_boolean = ... # type: bool
    a_uint32 = ... # type: int

    def __init__(self,
        a_string : Optional[Text] = None,
        a_repeated_string : Optional[Iterable[Text]] = None,
        a_boolean : Optional[bool] = None,
        a_uint32 : Optional[int] = None,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Simple1: ...
    def MergeFrom(self, other_msg: Message) -> None: ...
    def CopyFrom(self, other_msg: Message) -> None: ...

class Simple2(Message):
    a_string = ... # type: Text

    def __init__(self,
        a_string : Text,
        ) -> None: ...
    @classmethod
    def FromString(cls, s: bytes) -> Simple2: ...
    def MergeFrom(self, other_msg: Message) -> None: ...
    def CopyFrom(self, other_msg: Message) -> None: ...

class TestService(Any, metaclass=ABCMeta):
    @abstractmethod
    def Echo(self,
        rpc_controller: Any,
        request: Simple1,
        done: Optional[Callable[[Simple2], None]],
    ) -> Future[Simple2]: ...
class TestService_Stub(TestService):
    def __init__(self, rpc_channel: Any) -> None: ...
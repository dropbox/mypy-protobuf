"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""
import builtins
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.internal.enum_type_wrapper
import google.protobuf.message
import typing
import typing_extensions

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor = ...

type___OuterEnum = OuterEnum
class _OuterEnum(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[OuterEnum.V], builtins.type):
    DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
    UNKNOWN = OuterEnum.V(0)
    FOO3 = OuterEnum.V(1)
    BAR3 = OuterEnum.V(2)
class OuterEnum(metaclass=_OuterEnum):
    V = typing.NewType('V', builtins.int)
UNKNOWN = OuterEnum.V(0)
FOO3 = OuterEnum.V(1)
BAR3 = OuterEnum.V(2)

class OuterMessage3(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    a_bool: builtins.bool = ...

    def __init__(self,
        *,
        a_bool : builtins.bool = ...,
        ) -> None: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"a_bool",b"a_bool"]) -> None: ...
type___OuterMessage3 = OuterMessage3

class SimpleProto3(google.protobuf.message.Message):
    DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
    type___InnerEnum = InnerEnum
    class _InnerEnum(google.protobuf.internal.enum_type_wrapper._EnumTypeWrapper[InnerEnum.V], builtins.type):
        DESCRIPTOR: google.protobuf.descriptor.EnumDescriptor = ...
        INNER1 = SimpleProto3.InnerEnum.V(0)
        INNER2 = SimpleProto3.InnerEnum.V(1)
    class InnerEnum(metaclass=_InnerEnum):
        V = typing.NewType('V', builtins.int)
    INNER1 = SimpleProto3.InnerEnum.V(0)
    INNER2 = SimpleProto3.InnerEnum.V(1)

    class MapScalarEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        key: builtins.int = ...
        value: typing.Text = ...

        def __init__(self,
            *,
            key : builtins.int = ...,
            value : typing.Text = ...,
            ) -> None: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...
    type___MapScalarEntry = MapScalarEntry

    class MapMessageEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor = ...
        key: builtins.int = ...

        @property
        def value(self) -> type___OuterMessage3: ...

        def __init__(self,
            *,
            key : builtins.int = ...,
            value : typing.Optional[type___OuterMessage3] = ...,
            ) -> None: ...
        def HasField(self, field_name: typing_extensions.Literal[u"value",b"value"]) -> builtins.bool: ...
        def ClearField(self, field_name: typing_extensions.Literal[u"key",b"key",u"value",b"value"]) -> None: ...
    type___MapMessageEntry = MapMessageEntry

    a_string: typing.Text = ...
    a_repeated_string: google.protobuf.internal.containers.RepeatedScalarFieldContainer[typing.Text] = ...
    a_outer_enum: type___OuterEnum.V = ...
    inner_enum: type___SimpleProto3.InnerEnum.V = ...
    a_oneof_1: typing.Text = ...
    a_oneof_2: typing.Text = ...
    outer_enum_in_oneof: type___OuterEnum.V = ...
    inner_enum_in_oneof: type___SimpleProto3.InnerEnum.V = ...
    b_oneof_1: typing.Text = ...
    b_oneof_2: typing.Text = ...
    OuterEnum: type___OuterEnum.V = ...
    an_optional_string: typing.Text = ...

    @property
    def outer_message(self) -> type___OuterMessage3: ...

    @property
    def outer_message_in_oneof(self) -> type___OuterMessage3: ...

    @property
    def bool(self) -> type___OuterMessage3: ...

    @property
    def OuterMessage3(self) -> type___OuterMessage3: ...

    @property
    def map_scalar(self) -> google.protobuf.internal.containers.ScalarMap[builtins.int, typing.Text]: ...

    @property
    def map_message(self) -> google.protobuf.internal.containers.MessageMap[builtins.int, type___OuterMessage3]: ...

    def __init__(self,
        *,
        a_string : typing.Text = ...,
        a_repeated_string : typing.Optional[typing.Iterable[typing.Text]] = ...,
        a_outer_enum : type___OuterEnum.V = ...,
        outer_message : typing.Optional[type___OuterMessage3] = ...,
        inner_enum : type___SimpleProto3.InnerEnum.V = ...,
        a_oneof_1 : typing.Text = ...,
        a_oneof_2 : typing.Text = ...,
        outer_message_in_oneof : typing.Optional[type___OuterMessage3] = ...,
        outer_enum_in_oneof : type___OuterEnum.V = ...,
        inner_enum_in_oneof : type___SimpleProto3.InnerEnum.V = ...,
        b_oneof_1 : typing.Text = ...,
        b_oneof_2 : typing.Text = ...,
        bool : typing.Optional[type___OuterMessage3] = ...,
        OuterEnum : type___OuterEnum.V = ...,
        OuterMessage3 : typing.Optional[type___OuterMessage3] = ...,
        map_scalar : typing.Optional[typing.Mapping[builtins.int, typing.Text]] = ...,
        map_message : typing.Optional[typing.Mapping[builtins.int, type___OuterMessage3]] = ...,
        an_optional_string : typing.Text = ...,
        ) -> None: ...
    def HasField(self, field_name: typing_extensions.Literal[u"OuterMessage3",b"OuterMessage3",u"_an_optional_string",b"_an_optional_string",u"a_oneof",b"a_oneof",u"a_oneof_1",b"a_oneof_1",u"a_oneof_2",b"a_oneof_2",u"an_optional_string",b"an_optional_string",u"b_oneof",b"b_oneof",u"b_oneof_1",b"b_oneof_1",u"b_oneof_2",b"b_oneof_2",u"bool",b"bool",u"inner_enum_in_oneof",b"inner_enum_in_oneof",u"outer_enum_in_oneof",b"outer_enum_in_oneof",u"outer_message",b"outer_message",u"outer_message_in_oneof",b"outer_message_in_oneof"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing_extensions.Literal[u"OuterEnum",b"OuterEnum",u"OuterMessage3",b"OuterMessage3",u"_an_optional_string",b"_an_optional_string",u"a_oneof",b"a_oneof",u"a_oneof_1",b"a_oneof_1",u"a_oneof_2",b"a_oneof_2",u"a_outer_enum",b"a_outer_enum",u"a_repeated_string",b"a_repeated_string",u"a_string",b"a_string",u"an_optional_string",b"an_optional_string",u"b_oneof",b"b_oneof",u"b_oneof_1",b"b_oneof_1",u"b_oneof_2",b"b_oneof_2",u"bool",b"bool",u"inner_enum",b"inner_enum",u"inner_enum_in_oneof",b"inner_enum_in_oneof",u"map_message",b"map_message",u"map_scalar",b"map_scalar",u"outer_enum_in_oneof",b"outer_enum_in_oneof",u"outer_message",b"outer_message",u"outer_message_in_oneof",b"outer_message_in_oneof"]) -> None: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"_an_optional_string",b"_an_optional_string"]) -> typing_extensions.Literal["an_optional_string"]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"a_oneof",b"a_oneof"]) -> typing_extensions.Literal["a_oneof_1","a_oneof_2","outer_message_in_oneof","outer_enum_in_oneof","inner_enum_in_oneof"]: ...
    @typing.overload
    def WhichOneof(self, oneof_group: typing_extensions.Literal[u"b_oneof",b"b_oneof"]) -> typing_extensions.Literal["b_oneof_1","b_oneof_2"]: ...
type___SimpleProto3 = SimpleProto3

test_negative/negative.py:19: error: "Simple1" has no attribute "SerializeToStringg"
test_negative/negative.py:25: error: Argument 1 to "CopyFrom" of "Simple1" has incompatible type "bytes"; expected "Message"
test_negative/negative.py:29: error: Argument 1 to "extend" of "list" has incompatible type "RepeatedScalarFieldContainer[str]"; expected "Iterable[int]"
test_negative/negative.py:32: error: Incompatible types in assignment (expression has type "int", variable has type "OuterEnum")
test_negative/negative.py:35: error: Argument 1 to "HasField" of "Simple1" has incompatible type "Literal['garbage']"; expected "Union[Literal['a_boolean'], Literal['a_enum'], Literal['a_external_enum'], Literal['a_inner'], Literal['a_nested'], Literal['a_oneof'], Literal['a_oneof_1'], Literal['a_oneof_2'], Literal['a_string'], Literal['a_uint32'], Literal['inner_enum'], Literal['inner_message'], Literal['nested_enum'], Literal['nested_message'], Literal['no_package']]"
test_negative/negative.py:36: error: Argument 1 to "HasField" of "Simple1" has incompatible type "Literal['a_repeated_string']"; expected "Union[Literal['a_boolean'], Literal['a_enum'], Literal['a_external_enum'], Literal['a_inner'], Literal['a_nested'], Literal['a_oneof'], Literal['a_oneof_1'], Literal['a_oneof_2'], Literal['a_string'], Literal['a_uint32'], Literal['inner_enum'], Literal['inner_message'], Literal['nested_enum'], Literal['nested_message'], Literal['no_package']]"
test_negative/negative.py:38: error: Argument 1 to "HasField" of "Simple1" has incompatible type "Literal[b'a_string']"; expected "Union[Literal['a_boolean'], Literal['a_enum'], Literal['a_external_enum'], Literal['a_inner'], Literal['a_nested'], Literal['a_oneof'], Literal['a_oneof_1'], Literal['a_oneof_2'], Literal['a_string'], Literal['a_uint32'], Literal['inner_enum'], Literal['inner_message'], Literal['nested_enum'], Literal['nested_message'], Literal['no_package']]"
test_negative/negative.py:42: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal['garbage']"; expected "Union[Literal['a_oneof'], Literal['a_oneof_1'], Literal['a_oneof_2'], Literal['b_oneof'], Literal['b_oneof_1'], Literal['b_oneof_2'], Literal['outer_message']]"
test_negative/negative.py:43: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal['a_string']"; expected "Union[Literal['a_oneof'], Literal['a_oneof_1'], Literal['a_oneof_2'], Literal['b_oneof'], Literal['b_oneof_1'], Literal['b_oneof_2'], Literal['outer_message']]"
test_negative/negative.py:44: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal['outer_enum']"; expected "Union[Literal['a_oneof'], Literal['a_oneof_1'], Literal['a_oneof_2'], Literal['b_oneof'], Literal['b_oneof_1'], Literal['b_oneof_2'], Literal['outer_message']]"
test_negative/negative.py:45: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal['a_repeated_string']"; expected "Union[Literal['a_oneof'], Literal['a_oneof_1'], Literal['a_oneof_2'], Literal['b_oneof'], Literal['b_oneof_1'], Literal['b_oneof_2'], Literal['outer_message']]"
test_negative/negative.py:47: error: Argument 1 to "HasField" of "SimpleProto3" has incompatible type "Literal[b'outer_message']"; expected "Union[Literal['a_oneof'], Literal['a_oneof_1'], Literal['a_oneof_2'], Literal['b_oneof'], Literal['b_oneof_1'], Literal['b_oneof_2'], Literal['outer_message']]"
test_negative/negative.py:50: error: Argument 1 to "ClearField" of "Simple1" has incompatible type "Literal['garbage']"; expected <union: 18 items>
test_negative/negative.py:55: error: Argument 1 to "ClearField" of "Simple1" has incompatible type "Literal[b'a_string']"; expected <union: 18 items>
test_negative/negative.py:58: error: Argument 1 to "ClearField" of "SimpleProto3" has incompatible type "Literal['garbage']"; expected "Union[Literal['a_oneof'], Literal['a_oneof_1'], Literal['a_oneof_2'], Literal['a_repeated_string'], Literal['a_string'], Literal['b_oneof'], Literal['b_oneof_1'], Literal['b_oneof_2'], Literal['outer_enum'], Literal['outer_message']]"
test_negative/negative.py:63: error: Argument 1 to "ClearField" of "SimpleProto3" has incompatible type "Literal[b'a_string']"; expected "Union[Literal['a_oneof'], Literal['a_oneof_1'], Literal['a_oneof_2'], Literal['a_repeated_string'], Literal['a_string'], Literal['b_oneof'], Literal['b_oneof_1'], Literal['b_oneof_2'], Literal['outer_enum'], Literal['outer_message']]"
test_negative/negative.py:66: error: Argument 1 to "WhichOneof" of "Simple1" has incompatible type "Literal['garbage']"; expected "Union[Literal['a_oneof'], Literal[b'a_oneof']]"
test_negative/negative.py:68: error: Incompatible types in assignment (expression has type "Union[Literal['a_oneof_1'], Literal['a_oneof_2']]", variable has type "int")
test_negative/negative.py:72: error: Argument 1 to "HasField" of "Simple2" has incompatible type "Union[Literal['a_oneof_1'], Literal['a_oneof_2']]"; expected "Literal['a_string']"
test_negative/negative.py:75: error: No overload variant of "WhichOneof" of "SimpleProto3" matches argument type "str"
test_negative/negative.py:75: note: Possible overload variants:
test_negative/negative.py:75: note:     def WhichOneof(self, oneof_group: Union[Literal['a_oneof'], Literal[b'a_oneof']]) -> Union[Literal['a_oneof_1'], Literal['a_oneof_2']]
test_negative/negative.py:75: note:     def WhichOneof(self, oneof_group: Union[Literal['b_oneof'], Literal[b'b_oneof']]) -> Union[Literal['b_oneof_1'], Literal['b_oneof_2']]
test_negative/negative.py:76: error: Incompatible types in assignment (expression has type "Union[Literal['a_oneof_1'], Literal['a_oneof_2']]", variable has type "int")
test_negative/negative.py:79: error: Argument 1 to "HasField" of "Simple2" has incompatible type "Union[Literal['a_oneof_1'], Literal['a_oneof_2']]"; expected "Literal['a_string']"
test_negative/negative.py:83: error: Incompatible types in assignment (expression has type "Union[Literal['b_oneof_1'], Literal['b_oneof_2']]", variable has type "Union[Literal['a_oneof_1'], Literal['a_oneof_2']]")
